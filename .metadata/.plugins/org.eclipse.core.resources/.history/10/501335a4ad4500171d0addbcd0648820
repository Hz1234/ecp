package com.donglicms.web.front;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.donglicms.bean.AttributeType;
import com.donglicms.bean.CategoryAttrBean;
import com.donglicms.bean.SkuPriceBean;
import com.donglicms.bean.SkuType;
import com.donglicms.entity.Item;
import com.donglicms.entity.SkuPicture;
import com.donglicms.service.front.ICategoryAttrService;
import com.donglicms.service.front.IItemAttrService;
import com.donglicms.service.front.IItemService;
import com.donglicms.service.front.ISkuPictureService;
import com.donglicms.service.front.ISkuService;

/**
 * @ClassName ProductDetailController
 * @Description 商品详情-控制器
 * @author Administrator
 * @Date 2017年5月7日 下午5:54:02
 * @version 1.0.0
 */
@Controller
@RequestMapping("/front/product")
public class ProductDetailController {
	final String RESPONSE_THYMELEAF = "thymeleaf/front/";
	final String RESPONSE_JSP = "jsps/front/";

	@Autowired
	IItemService itemService;
	@Autowired
	ICategoryAttrService categoryAttrService;
	@Autowired
	IItemAttrService itemAttrService;
	@Autowired
	ISkuService skuService;
	@Autowired
	ISkuPictureService skuPictureService;

	/**
	 * @Description 通过目录进行查询
	 * @param categoryId
	 *            通过目录查询的参数
	 * @param model
	 *            spring model
	 * @return
	 */
	@RequestMapping(value = "/detail/{itemId}", method = RequestMethod.GET)
	public String productDetail(@PathVariable("itemId") long itemId, Model model) {

		// (1)读取SPU信息
		Item item = itemService.getItemById(itemId);
		model.addAttribute("item", item);

		// (2)读取SPU所属类目的销售属性,此处只使用属性的名称、个数
		List<Map<String, Object>> attrValueList = new ArrayList<Map<String, Object>>();

		List<CategoryAttrBean> cateAttrList = categoryAttrService.getCategoryAttrByCidAndType(item.getCid(),
				AttributeType.SALE_ATTR);
		for (CategoryAttrBean attrBean : cateAttrList) {
			HashMap<String, Object> attrValMap = new HashMap<String, Object>(); // 属性及属性值列表
			attrValMap.put("attrName", attrBean.getAttr_name()); // 属性名称
			List<Map<String, String>> valueList = itemAttrService.getItemAttrValList(item.getItemId(),
					attrBean.getAttr_id()); // 读取 item属性值 列表
			attrValMap.put("valueList", valueList);
			if (valueList.size() > 0) // 只有属性值个数大于0时才显示
				attrValueList.add(attrValMap); // 加入列表中
		}
		model.addAttribute("attrValueList", attrValueList);

		// (3)读取主sku信息 包括三个方面的内容 :sku信息、价格、图片
		List<SkuPriceBean> skuList = skuService.getSkuByIdAndType(item.getItemId(), SkuType.PRIMARY);
		model.addAttribute("sku", skuList.get(0));  //由于返回的是list类型		
		
		//(4)读取主sku图片		
		SkuPriceBean tempSku=skuList.get(0);		
		List<SkuPicture> skuPicts = skuPictureService.getSkuPictureById(tempSku.getSku_id());
		model.addAttribute("skuPicts", skuPicts);
		
		//(5)产品介绍、规则包装、售后保障、用户评论。
		

		return RESPONSE_THYMELEAF + "product_detail";
	}
	
	
	/**
	 * @Description 通过itemid 及 skuAttribute查询SKU详情
	 * @param itemId   SPU ID
	 * @param skuAttribute sku attribute
	 * @param model
	 * @return
	 */
	@RequestMapping(value = "/sku/detail", method = RequestMethod.POST)
	public String skuDetail(long itemId,String skuAttribute, Model model) {

		// (1)读取SPU信息
		Item item = itemService.getItemById(itemId);
		model.addAttribute("item", item);

		// (2)读取SPU所属类目的销售属性,此处只使用属性的名称、个数
		List<Map<String, Object>> attrValueList = new ArrayList<Map<String, Object>>();

		List<CategoryAttrBean> cateAttrList = categoryAttrService.getCategoryAttrByCidAndType(item.getCid(),
				AttributeType.SALE_ATTR);
		for (CategoryAttrBean attrBean : cateAttrList) {
			HashMap<String, Object> attrValMap = new HashMap<String, Object>(); // 属性及属性值列表
			attrValMap.put("attrName", attrBean.getAttr_name()); // 属性名称
			List<Map<String, String>> valueList = itemAttrService.getItemAttrValList(item.getItemId(),
					attrBean.getAttr_id()); // 读取 item属性值 列表
			attrValMap.put("valueList", valueList);
			if (valueList.size() > 0) // 只有属性值个数大于0时才显示
				attrValueList.add(attrValMap); // 加入列表中
		}
		model.addAttribute("attrValueList", attrValueList);

		// (3)读取主sku信息 包括三个方面的内容 :sku信息、价格、图片
		List<SkuPriceBean> skuList = skuService.getSkuByIdAndAttr(item.getItemId(), skuAttribute);
		model.addAttribute("sku", skuList.get(0));  //由于返回的是list类型		
		
		//(4)读取主sku图片		
		SkuPriceBean tempSku=skuList.get(0);		
		List<SkuPicture> skuPicts = skuPictureService.getSkuPictureById(tempSku.getSku_id());
		model.addAttribute("skuPicts", skuPicts);
		
		//(5)产品介绍、规则包装、售后保障、用户评论。
		

		return RESPONSE_THYMELEAF + "product_detail";
	}
	
	

}
